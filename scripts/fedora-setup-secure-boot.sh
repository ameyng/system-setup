#!/bin/sh

# Exit on any error.
# Exit if any unset variable is used/referenced.
set -eu

# Get the ID of the current user.
current_user_id="$(id -u)"

# Check if the script is not running as 'root'.
if [ "${current_user_id}" -ne 0 ]; then

  echo "Script is not running as 'root'."
  echo "Attempting to switch to 'root'."

  # Re-execute this script as 'root'.
  exec sudo "$0" "$@"

  # Due to the 'exec' command above, the below lines of code will not execute if the script succeeds running as 'root'.
  echo "Failed to switch to the 'root' user."
  exit 1

# Otherwise, if the script is running as 'root'.
else

  # Check if a signing key has been generated by the 'akmods' service.
  echo "Checking if a signing key has been generated by the 'akmods' service as '/etc/pki/akmods/certs/public_key.der'."
  if [ -f '/etc/pki/akmods/certs/public_key.der' ]; then

    echo 'Signing key found.'

  # Otherwise.
  else

    # Generate a signing key.
    echo "Generating a new signing key as '/etc/pki/akmods/certs/public_key.der'."
    kmodgenca -a

  fi

  echo 'Importing the signing key into the MOK database.'
  echo 'You will be prompted to enter a password for the same.'
  echo 'Please set a strong password and remember it, as it will be needed to enroll the key into the MOK database after rebooting.'
  mokutil --import '/etc/pki/akmods/certs/public_key.der'

  echo "Please reboot your system now."

fi

# Unset the variables used.
unset current_user_id
